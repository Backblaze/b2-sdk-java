// Copyright 2017, Backblaze Inc. All Rights Reserved.
// License https://www.backblaze.com/using_b2_code.html

//
// Before applying this file, you must set the following variables:
//   project.ext {
//     pomName = 'the name to use in the pom file'
//     pomDescription = 'the description to use in the pom file'
//   }
//

apply plugin: 'java'
apply plugin: 'maven'

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation "org.mockito:mockito-core:1.9.5"
}

// we need a repository to fetch our external dependencies.
// https://docs.gradle.org/4.0/userguide/artifact_dependencies_tutorial.html
repositories {
    mavenCentral()
}

ext.readVersion = { ->
    BufferedReader reader = new BufferedReader(new FileReader(new File(rootProject.projectDir, "core/src/main/resources/b2-sdk-core/version.txt")))
    String version = reader.readLine().trim()
    if (version.isEmpty()) {
        throw new RuntimeException("version is empty!?")
    }
    return version
}

sourceCompatibility = 1.8
group = "com.backblaze.b2"
version = readVersion()

project.archivesBaseName = project.ext.pomArtifactId
jar {
    manifest {
        attributes 'Implementation-Title': project.ext.pomArtifactId,
                'Implementation-Version': version
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.runtimeClasspath
    options.addStringOption("tag", "apiNote:a:NOTE")
}

// build a javadoc jar -- from javadoc files
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

// build a sources jar
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// add them to the artifacts collection
artifacts {
    archives javadocJar, sourcesJar
}

// whenever we might compileJava, run check_code.  this runs fast
// enough (less than a second) that i'm not going to try to avoid
// running it.
task checkCode(type: Exec) {
    commandLine "python", "../check_code", "src/main"
}
classes.dependsOn checkCode

// we generate our archives to a local build directory.
// travis zips them up and sends them to b2.
task writeNewPom {
    doLast {
        pom {
            project {
                artifactId project.ext.pomArtifactId
                name project.ext.pomName
                description project.ext.pomDescription
                url 'https://github.com/Backblaze/b2-sdk-java'

                licenses {
                    license {
                        name 'MIT'
                        url 'https://www.backblaze.com/using_b2_code.html'
                    }
                }

                developers {
                    developer {
                        name 'Maven At Backblaze'
                        email 'maven@backblaze.com'
                        organization = 'Backblaze, Inc.'  // see https://goo.gl/QHibvb for why there's an '=' here.
                        organizationUrl 'https://www.backblaze.com'
                    }
                }

                scm {
                    connection 'scm:https://github.com/Backblaze/b2-sdk-java.git'
                    developerConnection 'scm:https://github.com/Backblaze/b2-sdk-java.git'
                    url 'https://github.com/Backblaze/b2-sdk-java'
                }
            }
        }.writeTo("${buildDir}/libs/${project.ext.pomArtifactId}-${version}.pom")
    }
}


